<launch>
    <!-- velodyne -->
    <include file = "/home/badger/badger_ws/src/velodyne/velodyne_pointcloud/launch/VLP16_points.launch"/>

    <!--hokuyo-->
    <param
    name="goal_speed"
    type="int"
    value="50"
    />

  <node
    name="hokuyo_scan"
    pkg="urg_node"
    type="urg_node"
    output="screen"
    >
    <param
      name="ip_address"
      value="192.168.0.10"
    />
    <remap from="scan" to="hokuyo_scan"/>
  </node>

  <node
  	name="dynamixel_spin_continuous"
  	pkg="hokuyo_3d"
  	type="dynamixel_spin_continuous"
  	required="true"
  	output="screen"
  />

  <node
  	name="laser_transform_broadcaster"
  	pkg="hokuyo_3d"
  	type="laser_transform_broadcaster"
  	required="true"
  	output="screen"
  />

  <node
  	name="laserscan_to_pointcloud"
  	pkg="hokuyo_3d"
  	type="laserscan_to_pointcloud"
  	required="true"
  	output="screen"
  />

  <node
    name="laserscan_ugv_filter"
    pkg="hokuyo_3d"
    type="laserscan_ugv_filter"
    required="true"
    output="screen"
    >
    <param
      name="filter_threshold"
      value="0.2"
    />
  </node>

  <node
  	name="point_cloud2_assembler"
  	pkg="laser_assembler"
  	type="point_cloud2_assembler">
    <remap from="cloud" to="points_from_scan"/>
    <remap from="assembled_cloud" to="hokuyo_points"/> 
    <param name="max_clouds" type="int" value="400"/>
    <param name="fixed_frame" type="string" value="servo"/>
  </node>

  <node
    name="revolution_snapshotter"
    pkg="hokuyo_3d"
    type="revolution_snapshotter"
    required="true"
    output="screen"
  />

    <!--PointCloud Topic Merger-->
    <node
        pkg="hokuyo_3d"
        type="pointcloud_topic_merger"
        name="pointcloud_topic_merger"
        output="screen"
        />

    <!-- Static tf publisher -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="imu_transform" args="0 0 0 0 0 0 map base_link"/>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.05" />
	
	<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
	<param name="frame_id" type="string" value="map"/>
		
	<!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="10.0" />

        <param name="latch" type="bool" value="false" />

        <param name="base_frame_id" type="string" value="base_link" />
		
    </node>

<!--
    <node 
	pkg="rosbag" 
	type="record" 
	name="rosbag_record_LIDAR"
        args="record -o /home/badger/ /tf /tf_static /velodyne_points /hokuyo_points"
        output="screen"
	/>
 -->      
</launch>
